---
version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/ruby:2.4.5-node-browsers
        environment:
          BUNDLER_VERSION: 2.0.1
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: approvals
          RAILS_ENV: test
      - image: postgres:10
        environment:
          POSTGRES_USER: approvals
          POSTGRES_DB: approvals_test
          POSTGRES_PASSWORD: ""
    steps:
      - attach_workspace:
          at: '~/project'
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - approvals-bundle-v3-{{ checksum "Gemfile.lock" }}
            - approvals-bundle-v3-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: approvals-bundle-v3-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - approvals-yarn-v1-{{ checksum "yarn.lock" }}
            - approvals-yarn-v1-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: approvals-yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # ensure we have psql which we need for db:schema:load
      - run: sudo apt-get update
      - run: sudo apt-get install -y postgresql-client || true

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bin/rails db:create
            bin/rails db:structure:load

      - run:
          name: Run rubocop
          command: bundle exec rubocop    

      # Run rspec
      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb")


      # Save test results for timing analysis
      - store_test_results:
          path: test_results

      - persist_to_workspace:
          root: '~/project'
          paths: '*'

  coverage_report:
    working_directory: ~/project
    docker:
      - image: circleci/ruby:2.4.5-node-browsers
    steps:
      - attach_workspace:
          at: '~/project'
      - run: gem install simplecov
      - run:
          name: Inspect coverage report
          command: |
            RAILS_ENV=test ruby ./scripts/report_coverage.rb
      - store_artifacts:
          path: ~/project/coverage
          destination: coverage

workflows:
  version: 2
  build_accept:
    jobs:
      - build
      - coverage_report:
         requires:
          - build
